version: 2.1

workflows:
  version: 2
  build-test-cache:
    jobs:
      - smoke-test:
          context: clone-gofer-sh
      - regression:
          context: clone-gofer-sh
      - cache:
          requires:
            - smoke-test
            - regression
          context: NIX_BUILD
          filters:
            branches:
              only:
                - master
                - /release\/.*/
      - docker:
          requires:
            - cache

commands:
  setup-nix:
    description: Setup Nix
    steps:
      - run:
          name: Install Nix
          command: |
            curl -L https://nixos.org/nix/install | sh
  run-nix:
    description: Source nix profile and run shell command
    parameters:
      name_:
        type: string
      command:
        type: string
    steps:
      - run:
          name: << parameters.name_ >>
          command: |
            . $HOME/.nix-profile/etc/profile.d/nix.sh || true
            << parameters.command >>
  setup-cachix:
    description: Setup Cachix
    steps:
      - run-nix:
          name_: Install dependencies
          command: |
            nix-env -iA nixpkgs.gitMinimal nixpkgs.curl
            nix-env -iA cachix -f https://cachix.org/api/v1/install
      - run-nix:
          name_: Add build caches
          command: |
            cachix use maker
            cachix use dapp
  setup-ca:
    description: Setup CA certificate
    parameters:
      cert:
        type: string
    steps:
      - run:
          name: Install cert tools
          command: |
            command -v update-ca-certificates || apk --no-progress add --update --no-cache ca-certificates
      - run:
          name: Install cert << parameters.cert >>
          command: |
            cp "<< parameters.cert >>" /usr/local/share/ca-certificates
            update-ca-certificates
  pre-fetch:
    description: Pre-fetch Nix dependencies
    parameters:
      path:
        type: string
    steps:
      - run-nix:
          name_: Pre-fetch dependencies for << parameters.path >>
          command: |
            nix-shell "<< parameters.path >>" --run true
  clone-gofer:
    description: Copy gofer code
    steps:
      - run:
          name: Copying gofer source code to ./gofer
          command: |
            sh -c "$GOFER_CLONE_SH" _ ./gofer "$(cat ./nix/gofer-rev)"
executors:
  nix-executor:
    docker:
      - image: nixos/nix@sha256:909992c623023c15950f088185326b80012584127fbaef6366980d26a91c73d5
  ubuntu-executor:
    machine:
      image: ubuntu-1604:201903-01

jobs:
  smoke-test:
    executor: ubuntu-executor
    steps:
      - setup-nix
      - setup-cachix
      - checkout
      #- clone-gofer
      - pre-fetch:
          path: tests
      - run-nix:
          name_: Smoke test
          command: |
            nix-shell tests --run testSmoke
      - store_test_results:
          path: tests/test-results
  regression:
    executor: nix-executor
    steps:
      - setup-cachix
      - checkout
      #- clone-gofer
      - setup-ca:
          cert: tests/resources/mitmproxy/mitmproxy-ca-cert.cer
      - pre-fetch:
          path: tests
      - run-nix:
          name_: End 2 end regression test
          command: |
            nix-shell tests --run testE2E
      - store_test_results:
          path: ./tests/test-results
      - store_artifacts:
          path: ./logs
          destination: test-logs
  cache:
    executor: nix-executor
    steps:
      - setup-cachix
      - checkout
      - run-nix:
          name_: Push to Cachix
          command: nix-build --no-out-link | cachix push maker
  docker:
    executor: nix-executor
    steps:
      - setup-cachix
      - checkout
      #- clone-gofer
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Build docker image
          command: |
            nix-env -i docker
            TAG="circleci-${CIRCLE_BUILD_NUM:-latest}"
            docker build -t makerdao/omnia:$TAG .

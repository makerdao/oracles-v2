#!/usr/bin/env bash
_path=$(cd "${BASH_SOURCE[0]%/*}"; pwd)

. "$_path/../../lib/include.sh"

# Medianizer contracts not to deploy
rmPairs='
["ETH/BTC"
,"AAVE/USD"
,"UNI/USD"
]'
conf=$(cat "$_path/omnia.conf")
mapfile -t pairs < <(jq -r --argjson rp "$rmPairs" '
  .pairs|keys|.[]|select([.]|inside($rp)|not)
' <<<"$conf")

export OMNIA_CONFIG="$_path/_omnia.conf"
export OMNIA_SOURCE_PARALLEL=1
export OMNIA_DEBUG=1

startGeth

# Deploy Median contracts

echo >&2 "# Deploy oracle contracts"
oracles=$(deploy-median 0x1f8fbe73820765677e68eb6e933dcb3c94c9b708 "${pairs[@]}" 2>"${E2E_LOGS-.}/deploy-median.out")

startSSB

echo >&2 "# Replay Scuttlebot messages"
jq -c '.[].value.content' "$_path/ssb-messages.json" \
  | ssbPublishMessages

# Update omnia config
for pair in "${pairs[@]}"; do
  address=$(jq -r --arg p $pair '.[$p]' <<<"$oracles")
  conf=$(
    jq --arg p $pair --arg a $address \
      '.pairs[$p] = .pairs[$p] * { oracle: $a, msgExpiration: 180000000000, oracleExpiration: 180000000000 }' \
      <<<"$conf"
  )
done
conf=$(jq --arg id $(ssbId) '.feeds = [ $id ]' <<<"$conf")
conf=$(jq '.ethereum.network = "http://127.0.0.1:8545"' <<<"$conf")
echo "$conf" > "$OMNIA_CONFIG"

#echo >&2 "# HOME at $E2E_HOME"
#tail -f /dev/null

startOmnia

echo >&2 "# Read oracle prices"
for pair in "${pairs[@]}"; do
  address=$(jq -r --arg p $pair '.[$p]' <<<"$oracles")
  rawStorage=$(seth storage $address 0x1)
  jq -n \
    --arg p $pair \
    --arg v $(seth --from-wei $(seth --to-dec ${rawStorage:34:32})) \
    '{($p):$v}'
done | jq -Ss add

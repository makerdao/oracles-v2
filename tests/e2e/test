#!/usr/bin/env bash

_path="$(cd ${BASH_SOURCE[0]%/*}; pwd)"
proxyUrl=http://localhost:8080

while [[ "$1" ]]; do
  case "$1" in
    --update)
      update=1;;
    *)
      targets+=("$1");;
  esac
  shift
done

if [[ -z $targets ]]; then
  targets=($(cd "$_path"; find * -maxdepth 0 -type d ! -name "_*"))
fi

for target in "${targets[@]}"; do
  t_path="$_path/$target"
  mkdir -p logs

  if [[ $update ]]; then
    echo >&2 "# Recording through proxy"
    rm -f "$t_path/replay.mitm"
    mitmdump \
      -w "$t_path/replay.mitm" \
      --set "confdir=$_path/../resources/mitmproxy" \
      --set upstream_cert=false \
      >logs/mitm.out 2>&1 &
    sleep 1

    (
      export HTTP_PROXY="$proxyUrl"
      export HTTPS_PROXY="$proxyUrl"
      "$t_path/run" >/dev/null
    )
    pkill mitmdump
    "$_path/../lib/dedup-mitm" "$t_path/replay.mitm"
  fi

  echo >&2 "# Replaying through proxy"
  mitmdump \
    -S "$t_path/replay.mitm" \
    --set "confdir=$_path/../resources/mitmproxy" \
    --set upstream_cert=false \
    -k \
    --server-replay-refresh \
    --server-replay-kill-extra \
    --server-replay-nopop \
    >logs/mitm.out 2>&1 &
  sleep 1

  output=$(mktemp)
  (
    export HTTP_PROXY="$proxyUrl"
    export HTTPS_PROXY="$proxyUrl"
    "$t_path/run" > "$output"
  )
  echo >&2 "# Killing proxy"
  pkill mitmdump

  {
    if [[ $update ]]; then
      if "$t_path/test" "$output"; then
        cp -f "$output" "$t_path/ssb-messages.json"
      fi
    else
      "$t_path/regression" "$output"
    fi
  } | tee "./$target.tap"
done
